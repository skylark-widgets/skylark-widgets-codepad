{"version":3,"sources":["addons/js/babel.js"],"names":["define","langx","Addon","util","CodeGround","AddonBabel","_init","super","coder","this","options","window","Babel","babel","transform","$","html","listenTo","update","e","params","data","type","content","code","err","callback","categoryName","addonName","register"],"mappings":";;;;;;;AAAAA,OAAO,CACH,sBACA,cACA,aACA,iBACD,SAAUC,EAAMC,EAAMC,EAAKC,GAC1B,mBAEMC,UAAoBH,EAGtBI,QACIC,MAAMD,MAAM,EAEZ,IAAIE,EAAQC,KAAKD,MACHC,KAAKC,QAGnB,GAA4B,KAAA,IAAjBC,OAAOC,MACdH,KAAKI,MAAQF,OAAOC,UACjB,CAAA,GAA4B,KAAA,IAAjBD,OAAOE,MAGrB,OAFAJ,KAAKI,MAAQ,CAAEC,UAAWH,OAAOE,KAAM,CAG3C,CACAL,EAAMO,EAAE,2BAA2B,EAAEC,KAAK,QAAQ,EAClDP,KAAKQ,SAAST,EAAM,UAAUC,KAAKS,MAAM,CAC7C,CACAA,OAAOC,GACCC,EAASD,EAAEE,KACf,GAAoB,OAAhBD,EAAOE,KACP,IACIF,EAAOG,QAAUd,KAAKI,MAAMC,UAAUM,EAAOG,QAASd,KAAKC,OAAO,EAAEc,IAGxE,CAFE,MAAOC,GACL,OAAOC,SAASD,EAAKL,CAAM,CAC/B,CAKR,CAEAO,0BACI,MAAO,IACX,CAEAC,uBACI,MAAO,OACX,CAEJ,CAIA,OAFAvB,EAAWwB,SAASzB,CAAU,EAEvBC,CACX,CAAC","file":"../../../addons/js/babel.js","sourcesContent":["define([\r\n    'skylark-langx/langx',\r\n    \"../../addon\",\r\n    '../../util',\r\n    \"../../codepad\"\r\n], function (langx,Addon,util,CodeGround) {\r\n    'use strict';\r\n    \r\n    class AddonBabel  extends Addon{\r\n        //constructor(coder, options) \r\n\r\n        _init() {\r\n            super._init();\r\n\r\n            var coder = this.coder,\r\n                options = this.options;\r\n\r\n            //this.options = langx.clone(options);\r\n            if (typeof window.Babel !== 'undefined') {\r\n                this.babel = window.Babel;\r\n            } else if (typeof window.babel !== 'undefined') {\r\n                this.babel = { transform: window.babel };\r\n            } else {\r\n                return;\r\n            }\r\n            coder.$('a[data-codepad-type=\"js\"]').html('ES2015');\r\n            this.listenTo(coder,\"changed\",this.update);\r\n        }\r\n        update(e) {\r\n            var params = e.data;\r\n            if (params.type === 'js') {\r\n                try {\r\n                    params.content = this.babel.transform(params.content, this.options).code;\r\n                } catch (err) {\r\n                    return callback(err, params);\r\n                }\r\n                //callback(null, params);\r\n            } else {\r\n                //callback(null, params);\r\n            }\r\n        }\r\n\r\n        static get categoryName() {\r\n            return \"js\";\r\n        }\r\n\r\n        static get addonName(){\r\n            return \"babel\";\r\n        }\r\n\r\n    };\r\n\r\n    AddonBabel.register(CodeGround);\r\n\r\n    return AddonBabel;\r\n});"]}