{"version":3,"sources":["util.js"],"names":["define","langx","Xhr","seqRunner","index","params","arr","errors","callback","err","res","push","length","apply","this","arguments","defaultModemap","html","css","js","less","styl","coffee","fetch","url","get","then","e","seq","log","console","getMode","type","file","customModemap","key","modemap","mixin","let","keyLength","slice"],"mappings":";;;;;;;AAAAA,OAAO,CACH,sBACA,wBACF,SAAUC,EAAMC,GACd,aAyCA,SAASC,EAAUC,EAAOC,EAAQC,GAC9BA,EAAIF,GAAOC,EAdf,SAAqBD,EAAOC,EAAQC,EAAKC,EAAQC,GAC7C,OAAO,SAAUC,EAAKC,GACdD,GACAF,EAAOI,KAAKF,CAAG,EAEnBL,EAAAA,EACYE,EAAIM,OACZT,EAAUC,EAAOM,EAAKJ,EAAKC,EAAQC,CAAQ,EAE3CA,EAASD,EAAQG,CAAG,CAE5B,CACJ,EAEmCG,MAAMC,KAAMC,SAAS,CAAC,CACzD,CAcA,IAAIC,EAAiB,CACjBC,KAAQ,OACRC,IAAO,MACPC,GAAM,aACNC,KAAQ,OACRC,KAAQ,SACRC,OAAU,cACd,EAgBA,MAAO,CACHC,MA/EJ,SAAeC,EAAKhB,GAiBhBN,EAAIuB,IAAID,CAAG,EAAEE,KACT,SAAShB,GACLF,EAAS,KAAKE,CAAG,CACrB,EACA,SAASiB,GACLnB,EAASmB,CAAC,CACd,CACJ,CACJ,EAuDIC,IAtCJ,SAAatB,EAAKD,EAAQG,EAAW,cAEjC,IAAID,EAAS,GACb,GAAI,CAACD,EAAIM,OACL,OAAOJ,EAASD,EAAQF,CAAM,EAElCF,EAAU,EAAGE,EAAQC,EAAKC,EAAQC,CAAQ,CAC9C,EAgCIqB,IA/BJ,WACIC,QAAQD,IAAId,SAAS,CACzB,EA8BIgB,QAnBJ,SAAiBC,EAAO,GAAIC,EAAO,GAAIC,EAAgB,IACnD,IACSC,EAMAA,EAPLC,EAAUnC,EAAMoC,MAAM,GAAIrB,EAAekB,CAAa,EAC1D,IAASC,KAAOC,EAAS,CACrBE,IAAIC,EAAYJ,EAAIvB,OACpB,GAAIqB,EAAKO,MAAM,CAACD,CAAAA,CAAW,IAAM,IAAMJ,EACnC,OAAOC,EAAQD,EAEvB,CACA,IAASA,KAAOC,EACZ,GAAIJ,IAASG,EACT,OAAOC,EAAQD,GAGvB,OAAOH,CACX,CAMA,CACJ,CAAC","file":"../util.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-net-http/Xhr\"\r\n],function (langx,Xhr) {\r\n    'use strict';\r\n\r\n    function fetch(url, callback) {\r\n        /*\r\n        var xhr = new window.XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.responseType = 'text';\r\n        xhr.onload = function () {\r\n            if (xhr.status === 200) {\r\n                callback(null, xhr.responseText);\r\n            } else {\r\n                callback(url, xhr);\r\n            }\r\n        };\r\n        xhr.onerror = function (err) {\r\n            callback(err);\r\n        };\r\n        xhr.send();\r\n        */\r\n        Xhr.get(url).then(\r\n            function(res) {\r\n                callback(null,res);\r\n            },\r\n            function(e){\r\n                callback(e);\r\n            }\r\n        )\r\n    }\r\n    function runCallback(index, params, arr, errors, callback) {\r\n        return function (err, res) {\r\n            if (err) {\r\n                errors.push(err);\r\n            }\r\n            index++;\r\n            if (index < arr.length) {\r\n                seqRunner(index, res, arr, errors, callback);\r\n            } else {\r\n                callback(errors, res);\r\n            }\r\n        };\r\n    }\r\n    function seqRunner(index, params, arr, errors, callback) {\r\n        arr[index](params, runCallback.apply(this, arguments));\r\n    }\r\n    function seq(arr, params, callback = function () {\r\n    }) {\r\n        var errors = [];\r\n        if (!arr.length) {\r\n            return callback(errors, params);\r\n        }\r\n        seqRunner(0, params, arr, errors, callback);\r\n    }\r\n    function log() {\r\n        console.log(arguments);\r\n    }\r\n\r\n\r\n    var defaultModemap = {\r\n        'html': 'html',\r\n        'css': 'css',\r\n        'js': 'javascript',\r\n        'less': 'less',\r\n        'styl': 'stylus',\r\n        'coffee': 'coffeescript'\r\n    };\r\n    function getMode(type = '', file = '', customModemap = {}) {\r\n        var modemap = langx.mixin({}, defaultModemap,customModemap);\r\n        for (let key in modemap) {\r\n            let keyLength = key.length;\r\n            if (file.slice(-keyLength++) === '.' + key) {\r\n                return modemap[key];\r\n            }\r\n        }\r\n        for (let key in modemap) {\r\n            if (type === key) {\r\n                return modemap[key];\r\n            }\r\n        }\r\n        return type;\r\n    }\r\n    return {\r\n        fetch,\r\n        seq,\r\n        log,\r\n        getMode\r\n    };\r\n});"]}